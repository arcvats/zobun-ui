{"version":3,"sources":["../src/Button/index.tsx","../../../node_modules/tailwind-merge/src/lib/tw-join.ts","../../../node_modules/tailwind-merge/src/lib/class-utils.ts","../../../node_modules/tailwind-merge/src/lib/lru-cache.ts","../../../node_modules/tailwind-merge/src/lib/modifier-utils.ts","../../../node_modules/tailwind-merge/src/lib/config-utils.ts","../../../node_modules/tailwind-merge/src/lib/merge-classlist.ts","../../../node_modules/tailwind-merge/src/lib/create-tailwind-merge.ts","../../../node_modules/tailwind-merge/src/lib/from-theme.ts","../../../node_modules/tailwind-merge/src/lib/validators.ts","../../../node_modules/tailwind-merge/src/lib/default-config.ts","../../../node_modules/tailwind-merge/src/lib/tw-merge.ts","../../../node_modules/clsx/dist/clsx.mjs","../src/Button/consts.tsx"],"names":["React","Slot","twJoin","index","argument","resolvedValue","string","arguments","length","toValue","mix","k","CLASS_PART_SEPARATOR","createClassUtils","config","classMap","createClassMap","conflictingClassGroups","_config$conflictingCl","conflictingClassGroupModifiers","getClassGroupId","className","classParts","split","shift","getGroupRecursive","getGroupIdForArbitraryProperty","getConflictingClassGroupIds","classGroupId","hasPostfixModifier","conflicts","classPartObject","_a","currentClassPart","nextClassPartObject","nextPart","get","classGroupFromNextClassPart","slice","undefined","validators","classRest","join","find","_ref","validator","arbitraryPropertyRegex","test","arbitraryPropertyClassName","exec","property","substring","indexOf","theme","prefix","Map","prefixedClassGroupEntries","getPrefixedClassGroupEntries","Object","entries","classGroups","forEach","_ref2","classGroup","processClassesRecursively","classDefinition","classPartObjectToEdit","getPart","isThemeGetter","push","_ref3","key","path","currentClassPartObject","pathPart","has","set","func","classGroupEntries","map","_ref4","prefixedClassGroup","fromEntries","_ref5","value","createLruCache","maxCacheSize","cacheSize","cache","previousCache","update","IMPORTANT_MODIFIER","createSplitModifiers","separator","isSeparatorSingleCharacter","firstSeparatorCharacter","separatorLength","modifiers","bracketDepth","modifierStart","postfixModifierPosition","currentCharacter","baseClassNameWithImportantModifier","hasImportantModifier","startsWith","baseClassName","maybePostfixModifierPosition","sortModifiers","sortedModifiers","unsortedModifiers","modifier","isArbitraryVariant","sort","createConfigUtils","__spreadValues","splitModifiers","SPLIT_CLASSES_REGEX","mergeClassList","classList","configUtils","classGroupsInConflict","Set","trim","originalClassName","_splitModifiers","Boolean","isTailwindClass","variantModifier","modifierId","reverse","filter","parsed","classId","add","group","createTailwindMerge","_len","createConfig","_key","cacheGet","cacheSet","functionToCall","initTailwindMerge","firstCreateConfig","restCreateConfig","reduce","previousConfig","createConfigCurrent","tailwindMerge","cachedResult","result","apply","fromTheme","themeGetter","arbitraryValueRegex","fractionRegex","stringLengths","tshirtUnitRegex","lengthUnitRegex","shadowRegex","isLength","isNumber","isArbitraryLength","getIsArbitraryValue","isLengthOnly","isArbitrarySize","isNever","isArbitraryPosition","isArbitraryUrl","isUrl","isArbitraryNumber","Number","isNaN","isPercent","endsWith","isInteger","isIntegerOnly","isArbitraryValue","isAny","isTshirtSize","isArbitraryShadow","isShadow","label","testValue","getDefaultConfig","colors","spacing","blur","brightness","borderColor","borderRadius","borderSpacing","borderWidth","contrast","grayscale","hueRotate","invert","gap","gradientColorStops","gradientColorStopPositions","inset","margin","opacity","padding","saturate","scale","sepia","skew","space","translate","getOverscroll","getOverflow","getSpacingWithAutoAndArbitrary","getSpacingWithArbitrary","getLengthWithEmpty","getNumberWithAutoAndArbitrary","getPositions","getLineStyles","getBlendModes","getAlign","getZeroAndEmpty","getBreaks","getNumber","getNumberAndArbitrary","aspect","container","columns","box","display","clear","isolation","object","overflow","overscroll","position","start","end","top","right","bottom","left","visibility","z","basis","flex","grow","shrink","order","col","span","row","justify","content","items","self","p","px","py","ps","pe","pt","pr","pb","pl","m","mx","my","ms","me","mt","mr","mb","ml","w","screen","h","text","font","tracking","leading","list","placeholder","decoration","indent","align","whitespace","hyphens","bg","repeat","from","via","to","rounded","border","divide","outline","ring","shadow","table","caption","transition","duration","ease","delay","animate","transform","rotate","origin","accent","appearance","cursor","caret","resize","scroll","snap","touch","pan","select","fill","stroke","sr","twMerge","r","e","t","f","n","clsx","clsx_default","baseStyle","variantStyle","sizeStyle","colorMap","jsx","Button","ref","_b","type","variant","color","size","style","asChild","props","__objRest"],"mappings":"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","sourcesContent":["import React, { FC } from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { twMerge } from \"tailwind-merge\";\nimport clsx from \"clsx\";\nimport {\n\tbaseStyle,\n\tvariantStyle,\n\tsizeStyle,\n\tcolorMap,\n\tButtonProps,\n} from \"./consts\";\n\nexport type { ButtonProps };\n\nexport const Button: FC<ButtonProps> = React.forwardRef<\n\tHTMLButtonElement,\n\tButtonProps\n>(\n\t(\n\t\t{\n\t\t\ttype = \"button\",\n\t\t\tvariant = \"contained\",\n\t\t\tcolor = \"primary\",\n\t\t\tsize = \"medium\",\n\t\t\tclassName,\n\t\t\tstyle,\n\t\t\tlabel,\n\t\t\tasChild = false,\n\t\t\t...props\n\t\t},\n\t\tref,\n\t) => {\n\t\tconst Comp = asChild ? Slot : \"button\";\n\t\treturn (\n\t\t\t<Comp\n\t\t\t\ttype={type}\n\t\t\t\tclassName={twMerge(\n\t\t\t\t\tclsx(\n\t\t\t\t\t\tbaseStyle,\n\t\t\t\t\t\tvariantStyle[variant],\n\t\t\t\t\t\tcolorMap[variant][color],\n\t\t\t\t\t\tsizeStyle[size],\n\t\t\t\t\t\tclassName,\n\t\t\t\t\t),\n\t\t\t\t)}\n\t\t\t\tstyle={style}\n\t\t\t\tref={ref}\n\t\t\t\t{...props}\n\t\t\t/>\n\t\t);\n\t},\n);\n\nButton.displayName = \"Button\";\n","/**\n * The code in this file is copied from https://github.com/lukeed/clsx and modified to suit the needs of tailwind-merge better.\n *\n * Specifically:\n * - Runtime code from https://github.com/lukeed/clsx/blob/v1.2.1/src/index.js\n * - TypeScript types from https://github.com/lukeed/clsx/blob/v1.2.1/clsx.d.ts\n *\n * Original code has MIT license: Copyright (c) Luke Edwards <luke.edwards05@gmail.com> (lukeed.com)\n */\n\nexport type ClassNameValue = ClassNameArray | string | null | undefined | 0 | false\ntype ClassNameArray = ClassNameValue[]\n\nexport function twJoin(...classLists: ClassNameValue[]): string\nexport function twJoin() {\n    let index = 0\n    let argument: ClassNameValue\n    let resolvedValue: string\n    let string = ''\n\n    while (index < arguments.length) {\n        if ((argument = arguments[index++])) {\n            if ((resolvedValue = toValue(argument))) {\n                string && (string += ' ')\n                string += resolvedValue\n            }\n        }\n    }\n    return string\n}\n\nfunction toValue(mix: ClassNameArray | string) {\n    if (typeof mix === 'string') {\n        return mix\n    }\n\n    let resolvedValue: string\n    let string = ''\n\n    for (let k = 0; k < mix.length; k++) {\n        if (mix[k]) {\n            if ((resolvedValue = toValue(mix[k] as ClassNameArray | string))) {\n                string && (string += ' ')\n                string += resolvedValue\n            }\n        }\n    }\n\n    return string\n}\n","import { ClassGroup, ClassGroupId, ClassValidator, Config, ThemeGetter, ThemeObject } from './types'\n\nexport interface ClassPartObject {\n    nextPart: Map<string, ClassPartObject>\n    validators: ClassValidatorObject[]\n    classGroupId?: ClassGroupId\n}\n\ninterface ClassValidatorObject {\n    classGroupId: ClassGroupId\n    validator: ClassValidator\n}\n\nconst CLASS_PART_SEPARATOR = '-'\n\nexport function createClassUtils(config: Config) {\n    const classMap = createClassMap(config)\n    const { conflictingClassGroups, conflictingClassGroupModifiers = {} } = config\n\n    function getClassGroupId(className: string) {\n        const classParts = className.split(CLASS_PART_SEPARATOR)\n\n        // Classes like `-inset-1` produce an empty string as first classPart. We assume that classes for negative values are used correctly and remove it from classParts.\n        if (classParts[0] === '' && classParts.length !== 1) {\n            classParts.shift()\n        }\n\n        return getGroupRecursive(classParts, classMap) || getGroupIdForArbitraryProperty(className)\n    }\n\n    function getConflictingClassGroupIds(classGroupId: ClassGroupId, hasPostfixModifier: boolean) {\n        const conflicts = conflictingClassGroups[classGroupId] || []\n\n        if (hasPostfixModifier && conflictingClassGroupModifiers[classGroupId]) {\n            return [...conflicts, ...conflictingClassGroupModifiers[classGroupId]!]\n        }\n\n        return conflicts\n    }\n\n    return {\n        getClassGroupId,\n        getConflictingClassGroupIds,\n    }\n}\n\nfunction getGroupRecursive(\n    classParts: string[],\n    classPartObject: ClassPartObject,\n): ClassGroupId | undefined {\n    if (classParts.length === 0) {\n        return classPartObject.classGroupId\n    }\n\n    const currentClassPart = classParts[0]!\n    const nextClassPartObject = classPartObject.nextPart.get(currentClassPart)\n    const classGroupFromNextClassPart = nextClassPartObject\n        ? getGroupRecursive(classParts.slice(1), nextClassPartObject)\n        : undefined\n\n    if (classGroupFromNextClassPart) {\n        return classGroupFromNextClassPart\n    }\n\n    if (classPartObject.validators.length === 0) {\n        return undefined\n    }\n\n    const classRest = classParts.join(CLASS_PART_SEPARATOR)\n\n    return classPartObject.validators.find(({ validator }) => validator(classRest))?.classGroupId\n}\n\nconst arbitraryPropertyRegex = /^\\[(.+)\\]$/\n\nfunction getGroupIdForArbitraryProperty(className: string) {\n    if (arbitraryPropertyRegex.test(className)) {\n        const arbitraryPropertyClassName = arbitraryPropertyRegex.exec(className)![1]\n        const property = arbitraryPropertyClassName?.substring(\n            0,\n            arbitraryPropertyClassName.indexOf(':'),\n        )\n\n        if (property) {\n            // I use two dots here because one dot is used as prefix for class groups in plugins\n            return 'arbitrary..' + property\n        }\n    }\n}\n\n/**\n * Exported for testing only\n */\nexport function createClassMap(config: Config) {\n    const { theme, prefix } = config\n    const classMap: ClassPartObject = {\n        nextPart: new Map<string, ClassPartObject>(),\n        validators: [],\n    }\n\n    const prefixedClassGroupEntries = getPrefixedClassGroupEntries(\n        Object.entries(config.classGroups),\n        prefix,\n    )\n\n    prefixedClassGroupEntries.forEach(([classGroupId, classGroup]) => {\n        processClassesRecursively(classGroup, classMap, classGroupId, theme)\n    })\n\n    return classMap\n}\n\nfunction processClassesRecursively(\n    classGroup: ClassGroup,\n    classPartObject: ClassPartObject,\n    classGroupId: ClassGroupId,\n    theme: ThemeObject,\n) {\n    classGroup.forEach((classDefinition) => {\n        if (typeof classDefinition === 'string') {\n            const classPartObjectToEdit =\n                classDefinition === '' ? classPartObject : getPart(classPartObject, classDefinition)\n            classPartObjectToEdit.classGroupId = classGroupId\n            return\n        }\n\n        if (typeof classDefinition === 'function') {\n            if (isThemeGetter(classDefinition)) {\n                processClassesRecursively(\n                    classDefinition(theme),\n                    classPartObject,\n                    classGroupId,\n                    theme,\n                )\n                return\n            }\n\n            classPartObject.validators.push({\n                validator: classDefinition,\n                classGroupId,\n            })\n\n            return\n        }\n\n        Object.entries(classDefinition).forEach(([key, classGroup]) => {\n            processClassesRecursively(\n                classGroup,\n                getPart(classPartObject, key),\n                classGroupId,\n                theme,\n            )\n        })\n    })\n}\n\nfunction getPart(classPartObject: ClassPartObject, path: string) {\n    let currentClassPartObject = classPartObject\n\n    path.split(CLASS_PART_SEPARATOR).forEach((pathPart) => {\n        if (!currentClassPartObject.nextPart.has(pathPart)) {\n            currentClassPartObject.nextPart.set(pathPart, {\n                nextPart: new Map(),\n                validators: [],\n            })\n        }\n\n        currentClassPartObject = currentClassPartObject.nextPart.get(pathPart)!\n    })\n\n    return currentClassPartObject\n}\n\nfunction isThemeGetter(func: ClassValidator | ThemeGetter): func is ThemeGetter {\n    return (func as ThemeGetter).isThemeGetter\n}\n\nfunction getPrefixedClassGroupEntries(\n    classGroupEntries: Array<[classGroupId: string, classGroup: ClassGroup]>,\n    prefix: string | undefined,\n): Array<[classGroupId: string, classGroup: ClassGroup]> {\n    if (!prefix) {\n        return classGroupEntries\n    }\n\n    return classGroupEntries.map(([classGroupId, classGroup]) => {\n        const prefixedClassGroup = classGroup.map((classDefinition) => {\n            if (typeof classDefinition === 'string') {\n                return prefix + classDefinition\n            }\n\n            if (typeof classDefinition === 'object') {\n                return Object.fromEntries(\n                    Object.entries(classDefinition).map(([key, value]) => [prefix + key, value]),\n                )\n            }\n\n            return classDefinition\n        })\n\n        return [classGroupId, prefixedClassGroup]\n    })\n}\n","// Export is needed because TypeScript complains about an error otherwise:\n// Error: …/tailwind-merge/src/config-utils.ts(8,17): semantic error TS4058: Return type of exported function has or is using name 'LruCache' from external module \"…/tailwind-merge/src/lru-cache\" but cannot be named.\nexport interface LruCache<Key, Value> {\n    get(key: Key): Value | undefined\n    set(key: Key, value: Value): void\n}\n\n// LRU cache inspired from hashlru (https://github.com/dominictarr/hashlru/blob/v1.0.4/index.js) but object replaced with Map to improve performance\nexport function createLruCache<Key, Value>(maxCacheSize: number): LruCache<Key, Value> {\n    if (maxCacheSize < 1) {\n        return {\n            get: () => undefined,\n            set: () => {},\n        }\n    }\n\n    let cacheSize = 0\n    let cache = new Map<Key, Value>()\n    let previousCache = new Map<Key, Value>()\n\n    function update(key: Key, value: Value) {\n        cache.set(key, value)\n        cacheSize++\n\n        if (cacheSize > maxCacheSize) {\n            cacheSize = 0\n            previousCache = cache\n            cache = new Map()\n        }\n    }\n\n    return {\n        get(key) {\n            let value = cache.get(key)\n\n            if (value !== undefined) {\n                return value\n            }\n            if ((value = previousCache.get(key)) !== undefined) {\n                update(key, value)\n                return value\n            }\n        },\n        set(key, value) {\n            if (cache.has(key)) {\n                cache.set(key, value)\n            } else {\n                update(key, value)\n            }\n        },\n    }\n}\n","import { Config } from './types'\n\nexport const IMPORTANT_MODIFIER = '!'\n\nexport function createSplitModifiers(config: Config) {\n    const separator = config.separator || ':'\n    const isSeparatorSingleCharacter = separator.length === 1\n    const firstSeparatorCharacter = separator[0]\n    const separatorLength = separator.length\n\n    // splitModifiers inspired by https://github.com/tailwindlabs/tailwindcss/blob/v3.2.2/src/util/splitAtTopLevelOnly.js\n    return function splitModifiers(className: string) {\n        const modifiers = []\n\n        let bracketDepth = 0\n        let modifierStart = 0\n        let postfixModifierPosition: number | undefined\n\n        for (let index = 0; index < className.length; index++) {\n            let currentCharacter = className[index]\n\n            if (bracketDepth === 0) {\n                if (\n                    currentCharacter === firstSeparatorCharacter &&\n                    (isSeparatorSingleCharacter ||\n                        className.slice(index, index + separatorLength) === separator)\n                ) {\n                    modifiers.push(className.slice(modifierStart, index))\n                    modifierStart = index + separatorLength\n                    continue\n                }\n\n                if (currentCharacter === '/') {\n                    postfixModifierPosition = index\n                    continue\n                }\n            }\n\n            if (currentCharacter === '[') {\n                bracketDepth++\n            } else if (currentCharacter === ']') {\n                bracketDepth--\n            }\n        }\n\n        const baseClassNameWithImportantModifier =\n            modifiers.length === 0 ? className : className.substring(modifierStart)\n        const hasImportantModifier =\n            baseClassNameWithImportantModifier.startsWith(IMPORTANT_MODIFIER)\n        const baseClassName = hasImportantModifier\n            ? baseClassNameWithImportantModifier.substring(1)\n            : baseClassNameWithImportantModifier\n\n        const maybePostfixModifierPosition =\n            postfixModifierPosition && postfixModifierPosition > modifierStart\n                ? postfixModifierPosition - modifierStart\n                : undefined\n\n        return {\n            modifiers,\n            hasImportantModifier,\n            baseClassName,\n            maybePostfixModifierPosition,\n        }\n    }\n}\n\n/**\n * Sorts modifiers according to following schema:\n * - Predefined modifiers are sorted alphabetically\n * - When an arbitrary variant appears, it must be preserved which modifiers are before and after it\n */\nexport function sortModifiers(modifiers: string[]) {\n    if (modifiers.length <= 1) {\n        return modifiers\n    }\n\n    const sortedModifiers: string[] = []\n    let unsortedModifiers: string[] = []\n\n    modifiers.forEach((modifier) => {\n        const isArbitraryVariant = modifier[0] === '['\n\n        if (isArbitraryVariant) {\n            sortedModifiers.push(...unsortedModifiers.sort(), modifier)\n            unsortedModifiers = []\n        } else {\n            unsortedModifiers.push(modifier)\n        }\n    })\n\n    sortedModifiers.push(...unsortedModifiers.sort())\n\n    return sortedModifiers\n}\n","import { createClassUtils } from './class-utils'\nimport { createLruCache } from './lru-cache'\nimport { createSplitModifiers } from './modifier-utils'\nimport { Config } from './types'\n\nexport type ConfigUtils = ReturnType<typeof createConfigUtils>\n\nexport function createConfigUtils(config: Config) {\n    return {\n        cache: createLruCache<string, string>(config.cacheSize),\n        splitModifiers: createSplitModifiers(config),\n        ...createClassUtils(config),\n    }\n}\n","import { ConfigUtils } from './config-utils'\nimport { IMPORTANT_MODIFIER, sortModifiers } from './modifier-utils'\n\nconst SPLIT_CLASSES_REGEX = /\\s+/\n\nexport function mergeClassList(classList: string, configUtils: ConfigUtils) {\n    const { splitModifiers, getClassGroupId, getConflictingClassGroupIds } = configUtils\n\n    /**\n     * Set of classGroupIds in following format:\n     * `{importantModifier}{variantModifiers}{classGroupId}`\n     * @example 'float'\n     * @example 'hover:focus:bg-color'\n     * @example 'md:!pr'\n     */\n    const classGroupsInConflict = new Set<string>()\n\n    return (\n        classList\n            .trim()\n            .split(SPLIT_CLASSES_REGEX)\n            .map((originalClassName) => {\n                const {\n                    modifiers,\n                    hasImportantModifier,\n                    baseClassName,\n                    maybePostfixModifierPosition,\n                } = splitModifiers(originalClassName)\n\n                let classGroupId = getClassGroupId(\n                    maybePostfixModifierPosition\n                        ? baseClassName.substring(0, maybePostfixModifierPosition)\n                        : baseClassName,\n                )\n\n                let hasPostfixModifier = Boolean(maybePostfixModifierPosition)\n\n                if (!classGroupId) {\n                    if (!maybePostfixModifierPosition) {\n                        return {\n                            isTailwindClass: false as const,\n                            originalClassName,\n                        }\n                    }\n\n                    classGroupId = getClassGroupId(baseClassName)\n\n                    if (!classGroupId) {\n                        return {\n                            isTailwindClass: false as const,\n                            originalClassName,\n                        }\n                    }\n\n                    hasPostfixModifier = false\n                }\n\n                const variantModifier = sortModifiers(modifiers).join(':')\n\n                const modifierId = hasImportantModifier\n                    ? variantModifier + IMPORTANT_MODIFIER\n                    : variantModifier\n\n                return {\n                    isTailwindClass: true as const,\n                    modifierId,\n                    classGroupId,\n                    originalClassName,\n                    hasPostfixModifier,\n                }\n            })\n            .reverse()\n            // Last class in conflict wins, so we need to filter conflicting classes in reverse order.\n            .filter((parsed) => {\n                if (!parsed.isTailwindClass) {\n                    return true\n                }\n\n                const { modifierId, classGroupId, hasPostfixModifier } = parsed\n\n                const classId = modifierId + classGroupId\n\n                if (classGroupsInConflict.has(classId)) {\n                    return false\n                }\n\n                classGroupsInConflict.add(classId)\n\n                getConflictingClassGroupIds(classGroupId, hasPostfixModifier).forEach((group) =>\n                    classGroupsInConflict.add(modifierId + group),\n                )\n\n                return true\n            })\n            .reverse()\n            .map((parsed) => parsed.originalClassName)\n            .join(' ')\n    )\n}\n","import { createConfigUtils } from './config-utils'\nimport { mergeClassList } from './merge-classlist'\nimport { ClassNameValue, twJoin } from './tw-join'\nimport { Config } from './types'\n\ntype CreateConfigFirst = () => Config\ntype CreateConfigSubsequent = (config: Config) => Config\ntype TailwindMerge = (...classLists: ClassNameValue[]) => string\ntype ConfigUtils = ReturnType<typeof createConfigUtils>\n\nexport function createTailwindMerge(\n    ...createConfig: [CreateConfigFirst, ...CreateConfigSubsequent[]]\n): TailwindMerge {\n    let configUtils: ConfigUtils\n    let cacheGet: ConfigUtils['cache']['get']\n    let cacheSet: ConfigUtils['cache']['set']\n    let functionToCall = initTailwindMerge\n\n    function initTailwindMerge(classList: string) {\n        const [firstCreateConfig, ...restCreateConfig] = createConfig\n\n        const config = restCreateConfig.reduce(\n            (previousConfig, createConfigCurrent) => createConfigCurrent(previousConfig),\n            firstCreateConfig(),\n        )\n\n        configUtils = createConfigUtils(config)\n        cacheGet = configUtils.cache.get\n        cacheSet = configUtils.cache.set\n        functionToCall = tailwindMerge\n\n        return tailwindMerge(classList)\n    }\n\n    function tailwindMerge(classList: string) {\n        const cachedResult = cacheGet(classList)\n\n        if (cachedResult) {\n            return cachedResult\n        }\n\n        const result = mergeClassList(classList, configUtils)\n        cacheSet(classList, result)\n\n        return result\n    }\n\n    return function callTailwindMerge() {\n        return functionToCall(twJoin.apply(null, arguments as any))\n    }\n}\n","import { ThemeGetter, ThemeObject } from './types'\n\nexport function fromTheme(key: string): ThemeGetter {\n    const themeGetter = (theme: ThemeObject) => theme[key] || []\n\n    themeGetter.isThemeGetter = true as const\n\n    return themeGetter\n}\n","const arbitraryValueRegex = /^\\[(?:([a-z-]+):)?(.+)\\]$/i\nconst fractionRegex = /^\\d+\\/\\d+$/\nconst stringLengths = new Set(['px', 'full', 'screen'])\nconst tshirtUnitRegex = /^(\\d+(\\.\\d+)?)?(xs|sm|md|lg|xl)$/\nconst lengthUnitRegex =\n    /\\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\\b(calc|min|max|clamp)\\(.+\\)|^0$/\n// Shadow always begins with x and y offset separated by underscore\nconst shadowRegex = /^-?((\\d+)?\\.?(\\d+)[a-z]+|0)_-?((\\d+)?\\.?(\\d+)[a-z]+|0)/\n\nexport function isLength(value: string) {\n    return (\n        isNumber(value) ||\n        stringLengths.has(value) ||\n        fractionRegex.test(value) ||\n        isArbitraryLength(value)\n    )\n}\n\nexport function isArbitraryLength(value: string) {\n    return getIsArbitraryValue(value, 'length', isLengthOnly)\n}\n\nexport function isArbitrarySize(value: string) {\n    return getIsArbitraryValue(value, 'size', isNever)\n}\n\nexport function isArbitraryPosition(value: string) {\n    return getIsArbitraryValue(value, 'position', isNever)\n}\n\nexport function isArbitraryUrl(value: string) {\n    return getIsArbitraryValue(value, 'url', isUrl)\n}\n\nexport function isArbitraryNumber(value: string) {\n    return getIsArbitraryValue(value, 'number', isNumber)\n}\n\n/**\n * @deprecated Will be removed in next major version. Use `isArbitraryNumber` instead.\n */\nexport const isArbitraryWeight = isArbitraryNumber\n\nexport function isNumber(value: string) {\n    return !Number.isNaN(Number(value))\n}\n\nexport function isPercent(value: string) {\n    return value.endsWith('%') && isNumber(value.slice(0, -1))\n}\n\nexport function isInteger(value: string) {\n    return isIntegerOnly(value) || getIsArbitraryValue(value, 'number', isIntegerOnly)\n}\n\nexport function isArbitraryValue(value: string) {\n    return arbitraryValueRegex.test(value)\n}\n\nexport function isAny() {\n    return true\n}\n\nexport function isTshirtSize(value: string) {\n    return tshirtUnitRegex.test(value)\n}\n\nexport function isArbitraryShadow(value: string) {\n    return getIsArbitraryValue(value, '', isShadow)\n}\n\nfunction getIsArbitraryValue(value: string, label: string, testValue: (value: string) => boolean) {\n    const result = arbitraryValueRegex.exec(value)\n\n    if (result) {\n        if (result[1]) {\n            return result[1] === label\n        }\n\n        return testValue(result[2]!)\n    }\n\n    return false\n}\n\nfunction isLengthOnly(value: string) {\n    return lengthUnitRegex.test(value)\n}\n\nfunction isNever() {\n    return false\n}\n\nfunction isUrl(value: string) {\n    return value.startsWith('url(')\n}\n\nfunction isIntegerOnly(value: string) {\n    return Number.isInteger(Number(value))\n}\n\nfunction isShadow(value: string) {\n    return shadowRegex.test(value)\n}\n","import { fromTheme } from './from-theme'\nimport { Config } from './types'\nimport {\n    isAny,\n    isArbitraryLength,\n    isArbitraryNumber,\n    isArbitraryPosition,\n    isArbitraryShadow,\n    isArbitrarySize,\n    isArbitraryUrl,\n    isArbitraryValue,\n    isInteger,\n    isLength,\n    isNumber,\n    isPercent,\n    isTshirtSize,\n} from './validators'\n\nexport function getDefaultConfig() {\n    const colors = fromTheme('colors')\n    const spacing = fromTheme('spacing')\n    const blur = fromTheme('blur')\n    const brightness = fromTheme('brightness')\n    const borderColor = fromTheme('borderColor')\n    const borderRadius = fromTheme('borderRadius')\n    const borderSpacing = fromTheme('borderSpacing')\n    const borderWidth = fromTheme('borderWidth')\n    const contrast = fromTheme('contrast')\n    const grayscale = fromTheme('grayscale')\n    const hueRotate = fromTheme('hueRotate')\n    const invert = fromTheme('invert')\n    const gap = fromTheme('gap')\n    const gradientColorStops = fromTheme('gradientColorStops')\n    const gradientColorStopPositions = fromTheme('gradientColorStopPositions')\n    const inset = fromTheme('inset')\n    const margin = fromTheme('margin')\n    const opacity = fromTheme('opacity')\n    const padding = fromTheme('padding')\n    const saturate = fromTheme('saturate')\n    const scale = fromTheme('scale')\n    const sepia = fromTheme('sepia')\n    const skew = fromTheme('skew')\n    const space = fromTheme('space')\n    const translate = fromTheme('translate')\n\n    const getOverscroll = () => ['auto', 'contain', 'none'] as const\n    const getOverflow = () => ['auto', 'hidden', 'clip', 'visible', 'scroll'] as const\n    const getSpacingWithAutoAndArbitrary = () => ['auto', isArbitraryValue, spacing] as const\n    const getSpacingWithArbitrary = () => [isArbitraryValue, spacing] as const\n    const getLengthWithEmpty = () => ['', isLength] as const\n    const getNumberWithAutoAndArbitrary = () => ['auto', isNumber, isArbitraryValue] as const\n    const getPositions = () =>\n        [\n            'bottom',\n            'center',\n            'left',\n            'left-bottom',\n            'left-top',\n            'right',\n            'right-bottom',\n            'right-top',\n            'top',\n        ] as const\n    const getLineStyles = () => ['solid', 'dashed', 'dotted', 'double', 'none'] as const\n    const getBlendModes = () =>\n        [\n            'normal',\n            'multiply',\n            'screen',\n            'overlay',\n            'darken',\n            'lighten',\n            'color-dodge',\n            'color-burn',\n            'hard-light',\n            'soft-light',\n            'difference',\n            'exclusion',\n            'hue',\n            'saturation',\n            'color',\n            'luminosity',\n            'plus-lighter',\n        ] as const\n    const getAlign = () =>\n        ['start', 'end', 'center', 'between', 'around', 'evenly', 'stretch'] as const\n    const getZeroAndEmpty = () => ['', '0', isArbitraryValue] as const\n    const getBreaks = () =>\n        ['auto', 'avoid', 'all', 'avoid-page', 'page', 'left', 'right', 'column'] as const\n    const getNumber = () => [isNumber, isArbitraryNumber]\n    const getNumberAndArbitrary = () => [isNumber, isArbitraryValue]\n\n    return {\n        cacheSize: 500,\n        theme: {\n            colors: [isAny],\n            spacing: [isLength],\n            blur: ['none', '', isTshirtSize, isArbitraryValue],\n            brightness: getNumber(),\n            borderColor: [colors],\n            borderRadius: ['none', '', 'full', isTshirtSize, isArbitraryValue],\n            borderSpacing: getSpacingWithArbitrary(),\n            borderWidth: getLengthWithEmpty(),\n            contrast: getNumber(),\n            grayscale: getZeroAndEmpty(),\n            hueRotate: getNumberAndArbitrary(),\n            invert: getZeroAndEmpty(),\n            gap: getSpacingWithArbitrary(),\n            gradientColorStops: [colors],\n            gradientColorStopPositions: [isPercent, isArbitraryLength],\n            inset: getSpacingWithAutoAndArbitrary(),\n            margin: getSpacingWithAutoAndArbitrary(),\n            opacity: getNumber(),\n            padding: getSpacingWithArbitrary(),\n            saturate: getNumber(),\n            scale: getNumber(),\n            sepia: getZeroAndEmpty(),\n            skew: getNumberAndArbitrary(),\n            space: getSpacingWithArbitrary(),\n            translate: getSpacingWithArbitrary(),\n        },\n        classGroups: {\n            // Layout\n            /**\n             * Aspect Ratio\n             * @see https://tailwindcss.com/docs/aspect-ratio\n             */\n            aspect: [{ aspect: ['auto', 'square', 'video', isArbitraryValue] }],\n            /**\n             * Container\n             * @see https://tailwindcss.com/docs/container\n             */\n            container: ['container'],\n            /**\n             * Columns\n             * @see https://tailwindcss.com/docs/columns\n             */\n            columns: [{ columns: [isTshirtSize] }],\n            /**\n             * Break After\n             * @see https://tailwindcss.com/docs/break-after\n             */\n            'break-after': [{ 'break-after': getBreaks() }],\n            /**\n             * Break Before\n             * @see https://tailwindcss.com/docs/break-before\n             */\n            'break-before': [{ 'break-before': getBreaks() }],\n            /**\n             * Break Inside\n             * @see https://tailwindcss.com/docs/break-inside\n             */\n            'break-inside': [{ 'break-inside': ['auto', 'avoid', 'avoid-page', 'avoid-column'] }],\n            /**\n             * Box Decoration Break\n             * @see https://tailwindcss.com/docs/box-decoration-break\n             */\n            'box-decoration': [{ 'box-decoration': ['slice', 'clone'] }],\n            /**\n             * Box Sizing\n             * @see https://tailwindcss.com/docs/box-sizing\n             */\n            box: [{ box: ['border', 'content'] }],\n            /**\n             * Display\n             * @see https://tailwindcss.com/docs/display\n             */\n            display: [\n                'block',\n                'inline-block',\n                'inline',\n                'flex',\n                'inline-flex',\n                'table',\n                'inline-table',\n                'table-caption',\n                'table-cell',\n                'table-column',\n                'table-column-group',\n                'table-footer-group',\n                'table-header-group',\n                'table-row-group',\n                'table-row',\n                'flow-root',\n                'grid',\n                'inline-grid',\n                'contents',\n                'list-item',\n                'hidden',\n            ],\n            /**\n             * Floats\n             * @see https://tailwindcss.com/docs/float\n             */\n            float: [{ float: ['right', 'left', 'none'] }],\n            /**\n             * Clear\n             * @see https://tailwindcss.com/docs/clear\n             */\n            clear: [{ clear: ['left', 'right', 'both', 'none'] }],\n            /**\n             * Isolation\n             * @see https://tailwindcss.com/docs/isolation\n             */\n            isolation: ['isolate', 'isolation-auto'],\n            /**\n             * Object Fit\n             * @see https://tailwindcss.com/docs/object-fit\n             */\n            'object-fit': [{ object: ['contain', 'cover', 'fill', 'none', 'scale-down'] }],\n            /**\n             * Object Position\n             * @see https://tailwindcss.com/docs/object-position\n             */\n            'object-position': [{ object: [...getPositions(), isArbitraryValue] }],\n            /**\n             * Overflow\n             * @see https://tailwindcss.com/docs/overflow\n             */\n            overflow: [{ overflow: getOverflow() }],\n            /**\n             * Overflow X\n             * @see https://tailwindcss.com/docs/overflow\n             */\n            'overflow-x': [{ 'overflow-x': getOverflow() }],\n            /**\n             * Overflow Y\n             * @see https://tailwindcss.com/docs/overflow\n             */\n            'overflow-y': [{ 'overflow-y': getOverflow() }],\n            /**\n             * Overscroll Behavior\n             * @see https://tailwindcss.com/docs/overscroll-behavior\n             */\n            overscroll: [{ overscroll: getOverscroll() }],\n            /**\n             * Overscroll Behavior X\n             * @see https://tailwindcss.com/docs/overscroll-behavior\n             */\n            'overscroll-x': [{ 'overscroll-x': getOverscroll() }],\n            /**\n             * Overscroll Behavior Y\n             * @see https://tailwindcss.com/docs/overscroll-behavior\n             */\n            'overscroll-y': [{ 'overscroll-y': getOverscroll() }],\n            /**\n             * Position\n             * @see https://tailwindcss.com/docs/position\n             */\n            position: ['static', 'fixed', 'absolute', 'relative', 'sticky'],\n            /**\n             * Top / Right / Bottom / Left\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            inset: [{ inset: [inset] }],\n            /**\n             * Right / Left\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            'inset-x': [{ 'inset-x': [inset] }],\n            /**\n             * Top / Bottom\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            'inset-y': [{ 'inset-y': [inset] }],\n            /**\n             * Start\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            start: [{ start: [inset] }],\n            /**\n             * End\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            end: [{ end: [inset] }],\n            /**\n             * Top\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            top: [{ top: [inset] }],\n            /**\n             * Right\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            right: [{ right: [inset] }],\n            /**\n             * Bottom\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            bottom: [{ bottom: [inset] }],\n            /**\n             * Left\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            left: [{ left: [inset] }],\n            /**\n             * Visibility\n             * @see https://tailwindcss.com/docs/visibility\n             */\n            visibility: ['visible', 'invisible', 'collapse'],\n            /**\n             * Z-Index\n             * @see https://tailwindcss.com/docs/z-index\n             */\n            z: [{ z: ['auto', isInteger] }],\n            // Flexbox and Grid\n            /**\n             * Flex Basis\n             * @see https://tailwindcss.com/docs/flex-basis\n             */\n            basis: [{ basis: getSpacingWithAutoAndArbitrary() }],\n            /**\n             * Flex Direction\n             * @see https://tailwindcss.com/docs/flex-direction\n             */\n            'flex-direction': [{ flex: ['row', 'row-reverse', 'col', 'col-reverse'] }],\n            /**\n             * Flex Wrap\n             * @see https://tailwindcss.com/docs/flex-wrap\n             */\n            'flex-wrap': [{ flex: ['wrap', 'wrap-reverse', 'nowrap'] }],\n            /**\n             * Flex\n             * @see https://tailwindcss.com/docs/flex\n             */\n            flex: [{ flex: ['1', 'auto', 'initial', 'none', isArbitraryValue] }],\n            /**\n             * Flex Grow\n             * @see https://tailwindcss.com/docs/flex-grow\n             */\n            grow: [{ grow: getZeroAndEmpty() }],\n            /**\n             * Flex Shrink\n             * @see https://tailwindcss.com/docs/flex-shrink\n             */\n            shrink: [{ shrink: getZeroAndEmpty() }],\n            /**\n             * Order\n             * @see https://tailwindcss.com/docs/order\n             */\n            order: [{ order: ['first', 'last', 'none', isInteger] }],\n            /**\n             * Grid Template Columns\n             * @see https://tailwindcss.com/docs/grid-template-columns\n             */\n            'grid-cols': [{ 'grid-cols': [isAny] }],\n            /**\n             * Grid Column Start / End\n             * @see https://tailwindcss.com/docs/grid-column\n             */\n            'col-start-end': [{ col: ['auto', { span: ['full', isInteger] }, isArbitraryValue] }],\n            /**\n             * Grid Column Start\n             * @see https://tailwindcss.com/docs/grid-column\n             */\n            'col-start': [{ 'col-start': getNumberWithAutoAndArbitrary() }],\n            /**\n             * Grid Column End\n             * @see https://tailwindcss.com/docs/grid-column\n             */\n            'col-end': [{ 'col-end': getNumberWithAutoAndArbitrary() }],\n            /**\n             * Grid Template Rows\n             * @see https://tailwindcss.com/docs/grid-template-rows\n             */\n            'grid-rows': [{ 'grid-rows': [isAny] }],\n            /**\n             * Grid Row Start / End\n             * @see https://tailwindcss.com/docs/grid-row\n             */\n            'row-start-end': [{ row: ['auto', { span: [isInteger] }, isArbitraryValue] }],\n            /**\n             * Grid Row Start\n             * @see https://tailwindcss.com/docs/grid-row\n             */\n            'row-start': [{ 'row-start': getNumberWithAutoAndArbitrary() }],\n            /**\n             * Grid Row End\n             * @see https://tailwindcss.com/docs/grid-row\n             */\n            'row-end': [{ 'row-end': getNumberWithAutoAndArbitrary() }],\n            /**\n             * Grid Auto Flow\n             * @see https://tailwindcss.com/docs/grid-auto-flow\n             */\n            'grid-flow': [{ 'grid-flow': ['row', 'col', 'dense', 'row-dense', 'col-dense'] }],\n            /**\n             * Grid Auto Columns\n             * @see https://tailwindcss.com/docs/grid-auto-columns\n             */\n            'auto-cols': [{ 'auto-cols': ['auto', 'min', 'max', 'fr', isArbitraryValue] }],\n            /**\n             * Grid Auto Rows\n             * @see https://tailwindcss.com/docs/grid-auto-rows\n             */\n            'auto-rows': [{ 'auto-rows': ['auto', 'min', 'max', 'fr', isArbitraryValue] }],\n            /**\n             * Gap\n             * @see https://tailwindcss.com/docs/gap\n             */\n            gap: [{ gap: [gap] }],\n            /**\n             * Gap X\n             * @see https://tailwindcss.com/docs/gap\n             */\n            'gap-x': [{ 'gap-x': [gap] }],\n            /**\n             * Gap Y\n             * @see https://tailwindcss.com/docs/gap\n             */\n            'gap-y': [{ 'gap-y': [gap] }],\n            /**\n             * Justify Content\n             * @see https://tailwindcss.com/docs/justify-content\n             */\n            'justify-content': [{ justify: ['normal', ...getAlign()] }],\n            /**\n             * Justify Items\n             * @see https://tailwindcss.com/docs/justify-items\n             */\n            'justify-items': [{ 'justify-items': ['start', 'end', 'center', 'stretch'] }],\n            /**\n             * Justify Self\n             * @see https://tailwindcss.com/docs/justify-self\n             */\n            'justify-self': [{ 'justify-self': ['auto', 'start', 'end', 'center', 'stretch'] }],\n            /**\n             * Align Content\n             * @see https://tailwindcss.com/docs/align-content\n             */\n            'align-content': [{ content: ['normal', ...getAlign(), 'baseline'] }],\n            /**\n             * Align Items\n             * @see https://tailwindcss.com/docs/align-items\n             */\n            'align-items': [{ items: ['start', 'end', 'center', 'baseline', 'stretch'] }],\n            /**\n             * Align Self\n             * @see https://tailwindcss.com/docs/align-self\n             */\n            'align-self': [{ self: ['auto', 'start', 'end', 'center', 'stretch', 'baseline'] }],\n            /**\n             * Place Content\n             * @see https://tailwindcss.com/docs/place-content\n             */\n            'place-content': [{ 'place-content': [...getAlign(), 'baseline'] }],\n            /**\n             * Place Items\n             * @see https://tailwindcss.com/docs/place-items\n             */\n            'place-items': [{ 'place-items': ['start', 'end', 'center', 'baseline', 'stretch'] }],\n            /**\n             * Place Self\n             * @see https://tailwindcss.com/docs/place-self\n             */\n            'place-self': [{ 'place-self': ['auto', 'start', 'end', 'center', 'stretch'] }],\n            // Spacing\n            /**\n             * Padding\n             * @see https://tailwindcss.com/docs/padding\n             */\n            p: [{ p: [padding] }],\n            /**\n             * Padding X\n             * @see https://tailwindcss.com/docs/padding\n             */\n            px: [{ px: [padding] }],\n            /**\n             * Padding Y\n             * @see https://tailwindcss.com/docs/padding\n             */\n            py: [{ py: [padding] }],\n            /**\n             * Padding Start\n             * @see https://tailwindcss.com/docs/padding\n             */\n            ps: [{ ps: [padding] }],\n            /**\n             * Padding End\n             * @see https://tailwindcss.com/docs/padding\n             */\n            pe: [{ pe: [padding] }],\n            /**\n             * Padding Top\n             * @see https://tailwindcss.com/docs/padding\n             */\n            pt: [{ pt: [padding] }],\n            /**\n             * Padding Right\n             * @see https://tailwindcss.com/docs/padding\n             */\n            pr: [{ pr: [padding] }],\n            /**\n             * Padding Bottom\n             * @see https://tailwindcss.com/docs/padding\n             */\n            pb: [{ pb: [padding] }],\n            /**\n             * Padding Left\n             * @see https://tailwindcss.com/docs/padding\n             */\n            pl: [{ pl: [padding] }],\n            /**\n             * Margin\n             * @see https://tailwindcss.com/docs/margin\n             */\n            m: [{ m: [margin] }],\n            /**\n             * Margin X\n             * @see https://tailwindcss.com/docs/margin\n             */\n            mx: [{ mx: [margin] }],\n            /**\n             * Margin Y\n             * @see https://tailwindcss.com/docs/margin\n             */\n            my: [{ my: [margin] }],\n            /**\n             * Margin Start\n             * @see https://tailwindcss.com/docs/margin\n             */\n            ms: [{ ms: [margin] }],\n            /**\n             * Margin End\n             * @see https://tailwindcss.com/docs/margin\n             */\n            me: [{ me: [margin] }],\n            /**\n             * Margin Top\n             * @see https://tailwindcss.com/docs/margin\n             */\n            mt: [{ mt: [margin] }],\n            /**\n             * Margin Right\n             * @see https://tailwindcss.com/docs/margin\n             */\n            mr: [{ mr: [margin] }],\n            /**\n             * Margin Bottom\n             * @see https://tailwindcss.com/docs/margin\n             */\n            mb: [{ mb: [margin] }],\n            /**\n             * Margin Left\n             * @see https://tailwindcss.com/docs/margin\n             */\n            ml: [{ ml: [margin] }],\n            /**\n             * Space Between X\n             * @see https://tailwindcss.com/docs/space\n             */\n            'space-x': [{ 'space-x': [space] }],\n            /**\n             * Space Between X Reverse\n             * @see https://tailwindcss.com/docs/space\n             */\n            'space-x-reverse': ['space-x-reverse'],\n            /**\n             * Space Between Y\n             * @see https://tailwindcss.com/docs/space\n             */\n            'space-y': [{ 'space-y': [space] }],\n            /**\n             * Space Between Y Reverse\n             * @see https://tailwindcss.com/docs/space\n             */\n            'space-y-reverse': ['space-y-reverse'],\n            // Sizing\n            /**\n             * Width\n             * @see https://tailwindcss.com/docs/width\n             */\n            w: [{ w: ['auto', 'min', 'max', 'fit', isArbitraryValue, spacing] }],\n            /**\n             * Min-Width\n             * @see https://tailwindcss.com/docs/min-width\n             */\n            'min-w': [{ 'min-w': ['min', 'max', 'fit', isArbitraryValue, isLength] }],\n            /**\n             * Max-Width\n             * @see https://tailwindcss.com/docs/max-width\n             */\n            'max-w': [\n                {\n                    'max-w': [\n                        '0',\n                        'none',\n                        'full',\n                        'min',\n                        'max',\n                        'fit',\n                        'prose',\n                        { screen: [isTshirtSize] },\n                        isTshirtSize,\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n            /**\n             * Height\n             * @see https://tailwindcss.com/docs/height\n             */\n            h: [{ h: [isArbitraryValue, spacing, 'auto', 'min', 'max', 'fit'] }],\n            /**\n             * Min-Height\n             * @see https://tailwindcss.com/docs/min-height\n             */\n            'min-h': [{ 'min-h': ['min', 'max', 'fit', isArbitraryValue, isLength] }],\n            /**\n             * Max-Height\n             * @see https://tailwindcss.com/docs/max-height\n             */\n            'max-h': [{ 'max-h': [isArbitraryValue, spacing, 'min', 'max', 'fit'] }],\n            // Typography\n            /**\n             * Font Size\n             * @see https://tailwindcss.com/docs/font-size\n             */\n            'font-size': [{ text: ['base', isTshirtSize, isArbitraryLength] }],\n            /**\n             * Font Smoothing\n             * @see https://tailwindcss.com/docs/font-smoothing\n             */\n            'font-smoothing': ['antialiased', 'subpixel-antialiased'],\n            /**\n             * Font Style\n             * @see https://tailwindcss.com/docs/font-style\n             */\n            'font-style': ['italic', 'not-italic'],\n            /**\n             * Font Weight\n             * @see https://tailwindcss.com/docs/font-weight\n             */\n            'font-weight': [\n                {\n                    font: [\n                        'thin',\n                        'extralight',\n                        'light',\n                        'normal',\n                        'medium',\n                        'semibold',\n                        'bold',\n                        'extrabold',\n                        'black',\n                        isArbitraryNumber,\n                    ],\n                },\n            ],\n            /**\n             * Font Family\n             * @see https://tailwindcss.com/docs/font-family\n             */\n            'font-family': [{ font: [isAny] }],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-normal': ['normal-nums'],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-ordinal': ['ordinal'],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-slashed-zero': ['slashed-zero'],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-figure': ['lining-nums', 'oldstyle-nums'],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-spacing': ['proportional-nums', 'tabular-nums'],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-fraction': ['diagonal-fractions', 'stacked-fractons'],\n            /**\n             * Letter Spacing\n             * @see https://tailwindcss.com/docs/letter-spacing\n             */\n            tracking: [\n                {\n                    tracking: [\n                        'tighter',\n                        'tight',\n                        'normal',\n                        'wide',\n                        'wider',\n                        'widest',\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n            /**\n             * Line Clamp\n             * @see https://tailwindcss.com/docs/line-clamp\n             */\n            'line-clamp': [{ 'line-clamp': ['none', isNumber, isArbitraryNumber] }],\n            /**\n             * Line Height\n             * @see https://tailwindcss.com/docs/line-height\n             */\n            leading: [\n                {\n                    leading: [\n                        'none',\n                        'tight',\n                        'snug',\n                        'normal',\n                        'relaxed',\n                        'loose',\n                        isArbitraryValue,\n                        isLength,\n                    ],\n                },\n            ],\n            /**\n             * List Style Image\n             * @see https://tailwindcss.com/docs/list-style-image\n             */\n            'list-image': [{ 'list-image': ['none', isArbitraryValue] }],\n            /**\n             * List Style Type\n             * @see https://tailwindcss.com/docs/list-style-type\n             */\n            'list-style-type': [{ list: ['none', 'disc', 'decimal', isArbitraryValue] }],\n            /**\n             * List Style Position\n             * @see https://tailwindcss.com/docs/list-style-position\n             */\n            'list-style-position': [{ list: ['inside', 'outside'] }],\n            /**\n             * Placeholder Color\n             * @deprecated since Tailwind CSS v3.0.0\n             * @see https://tailwindcss.com/docs/placeholder-color\n             */\n            'placeholder-color': [{ placeholder: [colors] }],\n            /**\n             * Placeholder Opacity\n             * @see https://tailwindcss.com/docs/placeholder-opacity\n             */\n            'placeholder-opacity': [{ 'placeholder-opacity': [opacity] }],\n            /**\n             * Text Alignment\n             * @see https://tailwindcss.com/docs/text-align\n             */\n            'text-alignment': [{ text: ['left', 'center', 'right', 'justify', 'start', 'end'] }],\n            /**\n             * Text Color\n             * @see https://tailwindcss.com/docs/text-color\n             */\n            'text-color': [{ text: [colors] }],\n            /**\n             * Text Opacity\n             * @see https://tailwindcss.com/docs/text-opacity\n             */\n            'text-opacity': [{ 'text-opacity': [opacity] }],\n            /**\n             * Text Decoration\n             * @see https://tailwindcss.com/docs/text-decoration\n             */\n            'text-decoration': ['underline', 'overline', 'line-through', 'no-underline'],\n            /**\n             * Text Decoration Style\n             * @see https://tailwindcss.com/docs/text-decoration-style\n             */\n            'text-decoration-style': [{ decoration: [...getLineStyles(), 'wavy'] }],\n            /**\n             * Text Decoration Thickness\n             * @see https://tailwindcss.com/docs/text-decoration-thickness\n             */\n            'text-decoration-thickness': [{ decoration: ['auto', 'from-font', isLength] }],\n            /**\n             * Text Underline Offset\n             * @see https://tailwindcss.com/docs/text-underline-offset\n             */\n            'underline-offset': [{ 'underline-offset': ['auto', isArbitraryValue, isLength] }],\n            /**\n             * Text Decoration Color\n             * @see https://tailwindcss.com/docs/text-decoration-color\n             */\n            'text-decoration-color': [{ decoration: [colors] }],\n            /**\n             * Text Transform\n             * @see https://tailwindcss.com/docs/text-transform\n             */\n            'text-transform': ['uppercase', 'lowercase', 'capitalize', 'normal-case'],\n            /**\n             * Text Overflow\n             * @see https://tailwindcss.com/docs/text-overflow\n             */\n            'text-overflow': ['truncate', 'text-ellipsis', 'text-clip'],\n            /**\n             * Text Indent\n             * @see https://tailwindcss.com/docs/text-indent\n             */\n            indent: [{ indent: getSpacingWithArbitrary() }],\n            /**\n             * Vertical Alignment\n             * @see https://tailwindcss.com/docs/vertical-align\n             */\n            'vertical-align': [\n                {\n                    align: [\n                        'baseline',\n                        'top',\n                        'middle',\n                        'bottom',\n                        'text-top',\n                        'text-bottom',\n                        'sub',\n                        'super',\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n            /**\n             * Whitespace\n             * @see https://tailwindcss.com/docs/whitespace\n             */\n            whitespace: [\n                { whitespace: ['normal', 'nowrap', 'pre', 'pre-line', 'pre-wrap', 'break-spaces'] },\n            ],\n            /**\n             * Word Break\n             * @see https://tailwindcss.com/docs/word-break\n             */\n            break: [{ break: ['normal', 'words', 'all', 'keep'] }],\n            /**\n             * Hyphens\n             * @see https://tailwindcss.com/docs/hyphens\n             */\n            hyphens: [{ hyphens: ['none', 'manual', 'auto'] }],\n            /**\n             * Content\n             * @see https://tailwindcss.com/docs/content\n             */\n            content: [{ content: ['none', isArbitraryValue] }],\n            // Backgrounds\n            /**\n             * Background Attachment\n             * @see https://tailwindcss.com/docs/background-attachment\n             */\n            'bg-attachment': [{ bg: ['fixed', 'local', 'scroll'] }],\n            /**\n             * Background Clip\n             * @see https://tailwindcss.com/docs/background-clip\n             */\n            'bg-clip': [{ 'bg-clip': ['border', 'padding', 'content', 'text'] }],\n            /**\n             * Background Opacity\n             * @deprecated since Tailwind CSS v3.0.0\n             * @see https://tailwindcss.com/docs/background-opacity\n             */\n            'bg-opacity': [{ 'bg-opacity': [opacity] }],\n            /**\n             * Background Origin\n             * @see https://tailwindcss.com/docs/background-origin\n             */\n            'bg-origin': [{ 'bg-origin': ['border', 'padding', 'content'] }],\n            /**\n             * Background Position\n             * @see https://tailwindcss.com/docs/background-position\n             */\n            'bg-position': [{ bg: [...getPositions(), isArbitraryPosition] }],\n            /**\n             * Background Repeat\n             * @see https://tailwindcss.com/docs/background-repeat\n             */\n            'bg-repeat': [{ bg: ['no-repeat', { repeat: ['', 'x', 'y', 'round', 'space'] }] }],\n            /**\n             * Background Size\n             * @see https://tailwindcss.com/docs/background-size\n             */\n            'bg-size': [{ bg: ['auto', 'cover', 'contain', isArbitrarySize] }],\n            /**\n             * Background Image\n             * @see https://tailwindcss.com/docs/background-image\n             */\n            'bg-image': [\n                {\n                    bg: [\n                        'none',\n                        { 'gradient-to': ['t', 'tr', 'r', 'br', 'b', 'bl', 'l', 'tl'] },\n                        isArbitraryUrl,\n                    ],\n                },\n            ],\n            /**\n             * Background Color\n             * @see https://tailwindcss.com/docs/background-color\n             */\n            'bg-color': [{ bg: [colors] }],\n            /**\n             * Gradient Color Stops From Position\n             * @see https://tailwindcss.com/docs/gradient-color-stops\n             */\n            'gradient-from-pos': [{ from: [gradientColorStopPositions] }],\n            /**\n             * Gradient Color Stops Via Position\n             * @see https://tailwindcss.com/docs/gradient-color-stops\n             */\n            'gradient-via-pos': [{ via: [gradientColorStopPositions] }],\n            /**\n             * Gradient Color Stops To Position\n             * @see https://tailwindcss.com/docs/gradient-color-stops\n             */\n            'gradient-to-pos': [{ to: [gradientColorStopPositions] }],\n            /**\n             * Gradient Color Stops From\n             * @see https://tailwindcss.com/docs/gradient-color-stops\n             */\n            'gradient-from': [{ from: [gradientColorStops] }],\n            /**\n             * Gradient Color Stops Via\n             * @see https://tailwindcss.com/docs/gradient-color-stops\n             */\n            'gradient-via': [{ via: [gradientColorStops] }],\n            /**\n             * Gradient Color Stops To\n             * @see https://tailwindcss.com/docs/gradient-color-stops\n             */\n            'gradient-to': [{ to: [gradientColorStops] }],\n            // Borders\n            /**\n             * Border Radius\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            rounded: [{ rounded: [borderRadius] }],\n            /**\n             * Border Radius Start\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-s': [{ 'rounded-s': [borderRadius] }],\n            /**\n             * Border Radius End\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-e': [{ 'rounded-e': [borderRadius] }],\n            /**\n             * Border Radius Top\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-t': [{ 'rounded-t': [borderRadius] }],\n            /**\n             * Border Radius Right\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-r': [{ 'rounded-r': [borderRadius] }],\n            /**\n             * Border Radius Bottom\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-b': [{ 'rounded-b': [borderRadius] }],\n            /**\n             * Border Radius Left\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-l': [{ 'rounded-l': [borderRadius] }],\n            /**\n             * Border Radius Start Start\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-ss': [{ 'rounded-ss': [borderRadius] }],\n            /**\n             * Border Radius Start End\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-se': [{ 'rounded-se': [borderRadius] }],\n            /**\n             * Border Radius End End\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-ee': [{ 'rounded-ee': [borderRadius] }],\n            /**\n             * Border Radius End Start\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-es': [{ 'rounded-es': [borderRadius] }],\n            /**\n             * Border Radius Top Left\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-tl': [{ 'rounded-tl': [borderRadius] }],\n            /**\n             * Border Radius Top Right\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-tr': [{ 'rounded-tr': [borderRadius] }],\n            /**\n             * Border Radius Bottom Right\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-br': [{ 'rounded-br': [borderRadius] }],\n            /**\n             * Border Radius Bottom Left\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-bl': [{ 'rounded-bl': [borderRadius] }],\n            /**\n             * Border Width\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w': [{ border: [borderWidth] }],\n            /**\n             * Border Width X\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-x': [{ 'border-x': [borderWidth] }],\n            /**\n             * Border Width Y\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-y': [{ 'border-y': [borderWidth] }],\n            /**\n             * Border Width Start\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-s': [{ 'border-s': [borderWidth] }],\n            /**\n             * Border Width End\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-e': [{ 'border-e': [borderWidth] }],\n            /**\n             * Border Width Top\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-t': [{ 'border-t': [borderWidth] }],\n            /**\n             * Border Width Right\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-r': [{ 'border-r': [borderWidth] }],\n            /**\n             * Border Width Bottom\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-b': [{ 'border-b': [borderWidth] }],\n            /**\n             * Border Width Left\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-l': [{ 'border-l': [borderWidth] }],\n            /**\n             * Border Opacity\n             * @see https://tailwindcss.com/docs/border-opacity\n             */\n            'border-opacity': [{ 'border-opacity': [opacity] }],\n            /**\n             * Border Style\n             * @see https://tailwindcss.com/docs/border-style\n             */\n            'border-style': [{ border: [...getLineStyles(), 'hidden'] }],\n            /**\n             * Divide Width X\n             * @see https://tailwindcss.com/docs/divide-width\n             */\n            'divide-x': [{ 'divide-x': [borderWidth] }],\n            /**\n             * Divide Width X Reverse\n             * @see https://tailwindcss.com/docs/divide-width\n             */\n            'divide-x-reverse': ['divide-x-reverse'],\n            /**\n             * Divide Width Y\n             * @see https://tailwindcss.com/docs/divide-width\n             */\n            'divide-y': [{ 'divide-y': [borderWidth] }],\n            /**\n             * Divide Width Y Reverse\n             * @see https://tailwindcss.com/docs/divide-width\n             */\n            'divide-y-reverse': ['divide-y-reverse'],\n            /**\n             * Divide Opacity\n             * @see https://tailwindcss.com/docs/divide-opacity\n             */\n            'divide-opacity': [{ 'divide-opacity': [opacity] }],\n            /**\n             * Divide Style\n             * @see https://tailwindcss.com/docs/divide-style\n             */\n            'divide-style': [{ divide: getLineStyles() }],\n            /**\n             * Border Color\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color': [{ border: [borderColor] }],\n            /**\n             * Border Color X\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-x': [{ 'border-x': [borderColor] }],\n            /**\n             * Border Color Y\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-y': [{ 'border-y': [borderColor] }],\n            /**\n             * Border Color Top\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-t': [{ 'border-t': [borderColor] }],\n            /**\n             * Border Color Right\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-r': [{ 'border-r': [borderColor] }],\n            /**\n             * Border Color Bottom\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-b': [{ 'border-b': [borderColor] }],\n            /**\n             * Border Color Left\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-l': [{ 'border-l': [borderColor] }],\n            /**\n             * Divide Color\n             * @see https://tailwindcss.com/docs/divide-color\n             */\n            'divide-color': [{ divide: [borderColor] }],\n            /**\n             * Outline Style\n             * @see https://tailwindcss.com/docs/outline-style\n             */\n            'outline-style': [{ outline: ['', ...getLineStyles()] }],\n            /**\n             * Outline Offset\n             * @see https://tailwindcss.com/docs/outline-offset\n             */\n            'outline-offset': [{ 'outline-offset': [isArbitraryValue, isLength] }],\n            /**\n             * Outline Width\n             * @see https://tailwindcss.com/docs/outline-width\n             */\n            'outline-w': [{ outline: [isLength] }],\n            /**\n             * Outline Color\n             * @see https://tailwindcss.com/docs/outline-color\n             */\n            'outline-color': [{ outline: [colors] }],\n            /**\n             * Ring Width\n             * @see https://tailwindcss.com/docs/ring-width\n             */\n            'ring-w': [{ ring: getLengthWithEmpty() }],\n            /**\n             * Ring Width Inset\n             * @see https://tailwindcss.com/docs/ring-width\n             */\n            'ring-w-inset': ['ring-inset'],\n            /**\n             * Ring Color\n             * @see https://tailwindcss.com/docs/ring-color\n             */\n            'ring-color': [{ ring: [colors] }],\n            /**\n             * Ring Opacity\n             * @see https://tailwindcss.com/docs/ring-opacity\n             */\n            'ring-opacity': [{ 'ring-opacity': [opacity] }],\n            /**\n             * Ring Offset Width\n             * @see https://tailwindcss.com/docs/ring-offset-width\n             */\n            'ring-offset-w': [{ 'ring-offset': [isLength] }],\n            /**\n             * Ring Offset Color\n             * @see https://tailwindcss.com/docs/ring-offset-color\n             */\n            'ring-offset-color': [{ 'ring-offset': [colors] }],\n            // Effects\n            /**\n             * Box Shadow\n             * @see https://tailwindcss.com/docs/box-shadow\n             */\n            shadow: [{ shadow: ['', 'inner', 'none', isTshirtSize, isArbitraryShadow] }],\n            /**\n             * Box Shadow Color\n             * @see https://tailwindcss.com/docs/box-shadow-color\n             */\n            'shadow-color': [{ shadow: [isAny] }],\n            /**\n             * Opacity\n             * @see https://tailwindcss.com/docs/opacity\n             */\n            opacity: [{ opacity: [opacity] }],\n            /**\n             * Mix Blend Mode\n             * @see https://tailwindcss.com/docs/mix-blend-mode\n             */\n            'mix-blend': [{ 'mix-blend': getBlendModes() }],\n            /**\n             * Background Blend Mode\n             * @see https://tailwindcss.com/docs/background-blend-mode\n             */\n            'bg-blend': [{ 'bg-blend': getBlendModes() }],\n            // Filters\n            /**\n             * Filter\n             * @deprecated since Tailwind CSS v3.0.0\n             * @see https://tailwindcss.com/docs/filter\n             */\n            filter: [{ filter: ['', 'none'] }],\n            /**\n             * Blur\n             * @see https://tailwindcss.com/docs/blur\n             */\n            blur: [{ blur: [blur] }],\n            /**\n             * Brightness\n             * @see https://tailwindcss.com/docs/brightness\n             */\n            brightness: [{ brightness: [brightness] }],\n            /**\n             * Contrast\n             * @see https://tailwindcss.com/docs/contrast\n             */\n            contrast: [{ contrast: [contrast] }],\n            /**\n             * Drop Shadow\n             * @see https://tailwindcss.com/docs/drop-shadow\n             */\n            'drop-shadow': [{ 'drop-shadow': ['', 'none', isTshirtSize, isArbitraryValue] }],\n            /**\n             * Grayscale\n             * @see https://tailwindcss.com/docs/grayscale\n             */\n            grayscale: [{ grayscale: [grayscale] }],\n            /**\n             * Hue Rotate\n             * @see https://tailwindcss.com/docs/hue-rotate\n             */\n            'hue-rotate': [{ 'hue-rotate': [hueRotate] }],\n            /**\n             * Invert\n             * @see https://tailwindcss.com/docs/invert\n             */\n            invert: [{ invert: [invert] }],\n            /**\n             * Saturate\n             * @see https://tailwindcss.com/docs/saturate\n             */\n            saturate: [{ saturate: [saturate] }],\n            /**\n             * Sepia\n             * @see https://tailwindcss.com/docs/sepia\n             */\n            sepia: [{ sepia: [sepia] }],\n            /**\n             * Backdrop Filter\n             * @deprecated since Tailwind CSS v3.0.0\n             * @see https://tailwindcss.com/docs/backdrop-filter\n             */\n            'backdrop-filter': [{ 'backdrop-filter': ['', 'none'] }],\n            /**\n             * Backdrop Blur\n             * @see https://tailwindcss.com/docs/backdrop-blur\n             */\n            'backdrop-blur': [{ 'backdrop-blur': [blur] }],\n            /**\n             * Backdrop Brightness\n             * @see https://tailwindcss.com/docs/backdrop-brightness\n             */\n            'backdrop-brightness': [{ 'backdrop-brightness': [brightness] }],\n            /**\n             * Backdrop Contrast\n             * @see https://tailwindcss.com/docs/backdrop-contrast\n             */\n            'backdrop-contrast': [{ 'backdrop-contrast': [contrast] }],\n            /**\n             * Backdrop Grayscale\n             * @see https://tailwindcss.com/docs/backdrop-grayscale\n             */\n            'backdrop-grayscale': [{ 'backdrop-grayscale': [grayscale] }],\n            /**\n             * Backdrop Hue Rotate\n             * @see https://tailwindcss.com/docs/backdrop-hue-rotate\n             */\n            'backdrop-hue-rotate': [{ 'backdrop-hue-rotate': [hueRotate] }],\n            /**\n             * Backdrop Invert\n             * @see https://tailwindcss.com/docs/backdrop-invert\n             */\n            'backdrop-invert': [{ 'backdrop-invert': [invert] }],\n            /**\n             * Backdrop Opacity\n             * @see https://tailwindcss.com/docs/backdrop-opacity\n             */\n            'backdrop-opacity': [{ 'backdrop-opacity': [opacity] }],\n            /**\n             * Backdrop Saturate\n             * @see https://tailwindcss.com/docs/backdrop-saturate\n             */\n            'backdrop-saturate': [{ 'backdrop-saturate': [saturate] }],\n            /**\n             * Backdrop Sepia\n             * @see https://tailwindcss.com/docs/backdrop-sepia\n             */\n            'backdrop-sepia': [{ 'backdrop-sepia': [sepia] }],\n            // Tables\n            /**\n             * Border Collapse\n             * @see https://tailwindcss.com/docs/border-collapse\n             */\n            'border-collapse': [{ border: ['collapse', 'separate'] }],\n            /**\n             * Border Spacing\n             * @see https://tailwindcss.com/docs/border-spacing\n             */\n            'border-spacing': [{ 'border-spacing': [borderSpacing] }],\n            /**\n             * Border Spacing X\n             * @see https://tailwindcss.com/docs/border-spacing\n             */\n            'border-spacing-x': [{ 'border-spacing-x': [borderSpacing] }],\n            /**\n             * Border Spacing Y\n             * @see https://tailwindcss.com/docs/border-spacing\n             */\n            'border-spacing-y': [{ 'border-spacing-y': [borderSpacing] }],\n            /**\n             * Table Layout\n             * @see https://tailwindcss.com/docs/table-layout\n             */\n            'table-layout': [{ table: ['auto', 'fixed'] }],\n            /**\n             * Caption Side\n             * @see https://tailwindcss.com/docs/caption-side\n             */\n            caption: [{ caption: ['top', 'bottom'] }],\n            // Transitions and Animation\n            /**\n             * Tranisition Property\n             * @see https://tailwindcss.com/docs/transition-property\n             */\n            transition: [\n                {\n                    transition: [\n                        'none',\n                        'all',\n                        '',\n                        'colors',\n                        'opacity',\n                        'shadow',\n                        'transform',\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n            /**\n             * Transition Duration\n             * @see https://tailwindcss.com/docs/transition-duration\n             */\n            duration: [{ duration: getNumberAndArbitrary() }],\n            /**\n             * Transition Timing Function\n             * @see https://tailwindcss.com/docs/transition-timing-function\n             */\n            ease: [{ ease: ['linear', 'in', 'out', 'in-out', isArbitraryValue] }],\n            /**\n             * Transition Delay\n             * @see https://tailwindcss.com/docs/transition-delay\n             */\n            delay: [{ delay: getNumberAndArbitrary() }],\n            /**\n             * Animation\n             * @see https://tailwindcss.com/docs/animation\n             */\n            animate: [{ animate: ['none', 'spin', 'ping', 'pulse', 'bounce', isArbitraryValue] }],\n            // Transforms\n            /**\n             * Transform\n             * @see https://tailwindcss.com/docs/transform\n             */\n            transform: [{ transform: ['', 'gpu', 'none'] }],\n            /**\n             * Scale\n             * @see https://tailwindcss.com/docs/scale\n             */\n            scale: [{ scale: [scale] }],\n            /**\n             * Scale X\n             * @see https://tailwindcss.com/docs/scale\n             */\n            'scale-x': [{ 'scale-x': [scale] }],\n            /**\n             * Scale Y\n             * @see https://tailwindcss.com/docs/scale\n             */\n            'scale-y': [{ 'scale-y': [scale] }],\n            /**\n             * Rotate\n             * @see https://tailwindcss.com/docs/rotate\n             */\n            rotate: [{ rotate: [isInteger, isArbitraryValue] }],\n            /**\n             * Translate X\n             * @see https://tailwindcss.com/docs/translate\n             */\n            'translate-x': [{ 'translate-x': [translate] }],\n            /**\n             * Translate Y\n             * @see https://tailwindcss.com/docs/translate\n             */\n            'translate-y': [{ 'translate-y': [translate] }],\n            /**\n             * Skew X\n             * @see https://tailwindcss.com/docs/skew\n             */\n            'skew-x': [{ 'skew-x': [skew] }],\n            /**\n             * Skew Y\n             * @see https://tailwindcss.com/docs/skew\n             */\n            'skew-y': [{ 'skew-y': [skew] }],\n            /**\n             * Transform Origin\n             * @see https://tailwindcss.com/docs/transform-origin\n             */\n            'transform-origin': [\n                {\n                    origin: [\n                        'center',\n                        'top',\n                        'top-right',\n                        'right',\n                        'bottom-right',\n                        'bottom',\n                        'bottom-left',\n                        'left',\n                        'top-left',\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n            // Interactivity\n            /**\n             * Accent Color\n             * @see https://tailwindcss.com/docs/accent-color\n             */\n            accent: [{ accent: ['auto', colors] }],\n            /**\n             * Appearance\n             * @see https://tailwindcss.com/docs/appearance\n             */\n            appearance: ['appearance-none'],\n            /**\n             * Cursor\n             * @see https://tailwindcss.com/docs/cursor\n             */\n            cursor: [\n                {\n                    cursor: [\n                        'auto',\n                        'default',\n                        'pointer',\n                        'wait',\n                        'text',\n                        'move',\n                        'help',\n                        'not-allowed',\n                        'none',\n                        'context-menu',\n                        'progress',\n                        'cell',\n                        'crosshair',\n                        'vertical-text',\n                        'alias',\n                        'copy',\n                        'no-drop',\n                        'grab',\n                        'grabbing',\n                        'all-scroll',\n                        'col-resize',\n                        'row-resize',\n                        'n-resize',\n                        'e-resize',\n                        's-resize',\n                        'w-resize',\n                        'ne-resize',\n                        'nw-resize',\n                        'se-resize',\n                        'sw-resize',\n                        'ew-resize',\n                        'ns-resize',\n                        'nesw-resize',\n                        'nwse-resize',\n                        'zoom-in',\n                        'zoom-out',\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n            /**\n             * Caret Color\n             * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities\n             */\n            'caret-color': [{ caret: [colors] }],\n            /**\n             * Pointer Events\n             * @see https://tailwindcss.com/docs/pointer-events\n             */\n            'pointer-events': [{ 'pointer-events': ['none', 'auto'] }],\n            /**\n             * Resize\n             * @see https://tailwindcss.com/docs/resize\n             */\n            resize: [{ resize: ['none', 'y', 'x', ''] }],\n            /**\n             * Scroll Behavior\n             * @see https://tailwindcss.com/docs/scroll-behavior\n             */\n            'scroll-behavior': [{ scroll: ['auto', 'smooth'] }],\n            /**\n             * Scroll Margin\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-m': [{ 'scroll-m': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Margin X\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-mx': [{ 'scroll-mx': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Margin Y\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-my': [{ 'scroll-my': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Margin Start\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-ms': [{ 'scroll-ms': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Margin End\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-me': [{ 'scroll-me': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Margin Top\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-mt': [{ 'scroll-mt': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Margin Right\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-mr': [{ 'scroll-mr': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Margin Bottom\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-mb': [{ 'scroll-mb': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Margin Left\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-ml': [{ 'scroll-ml': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Padding\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-p': [{ 'scroll-p': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Padding X\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-px': [{ 'scroll-px': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Padding Y\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-py': [{ 'scroll-py': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Padding Start\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-ps': [{ 'scroll-ps': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Padding End\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-pe': [{ 'scroll-pe': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Padding Top\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-pt': [{ 'scroll-pt': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Padding Right\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-pr': [{ 'scroll-pr': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Padding Bottom\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-pb': [{ 'scroll-pb': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Padding Left\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-pl': [{ 'scroll-pl': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Snap Align\n             * @see https://tailwindcss.com/docs/scroll-snap-align\n             */\n            'snap-align': [{ snap: ['start', 'end', 'center', 'align-none'] }],\n            /**\n             * Scroll Snap Stop\n             * @see https://tailwindcss.com/docs/scroll-snap-stop\n             */\n            'snap-stop': [{ snap: ['normal', 'always'] }],\n            /**\n             * Scroll Snap Type\n             * @see https://tailwindcss.com/docs/scroll-snap-type\n             */\n            'snap-type': [{ snap: ['none', 'x', 'y', 'both'] }],\n            /**\n             * Scroll Snap Type Strictness\n             * @see https://tailwindcss.com/docs/scroll-snap-type\n             */\n            'snap-strictness': [{ snap: ['mandatory', 'proximity'] }],\n            /**\n             * Touch Action\n             * @see https://tailwindcss.com/docs/touch-action\n             */\n            touch: [\n                {\n                    touch: [\n                        'auto',\n                        'none',\n                        'pinch-zoom',\n                        'manipulation',\n                        { pan: ['x', 'left', 'right', 'y', 'up', 'down'] },\n                    ],\n                },\n            ],\n            /**\n             * User Select\n             * @see https://tailwindcss.com/docs/user-select\n             */\n            select: [{ select: ['none', 'text', 'all', 'auto'] }],\n            /**\n             * Will Change\n             * @see https://tailwindcss.com/docs/will-change\n             */\n            'will-change': [\n                { 'will-change': ['auto', 'scroll', 'contents', 'transform', isArbitraryValue] },\n            ],\n            // SVG\n            /**\n             * Fill\n             * @see https://tailwindcss.com/docs/fill\n             */\n            fill: [{ fill: [colors, 'none'] }],\n            /**\n             * Stroke Width\n             * @see https://tailwindcss.com/docs/stroke-width\n             */\n            'stroke-w': [{ stroke: [isLength, isArbitraryNumber] }],\n            /**\n             * Stroke\n             * @see https://tailwindcss.com/docs/stroke\n             */\n            stroke: [{ stroke: [colors, 'none'] }],\n            // Accessibility\n            /**\n             * Screen Readers\n             * @see https://tailwindcss.com/docs/screen-readers\n             */\n            sr: ['sr-only', 'not-sr-only'],\n        },\n        conflictingClassGroups: {\n            overflow: ['overflow-x', 'overflow-y'],\n            overscroll: ['overscroll-x', 'overscroll-y'],\n            inset: ['inset-x', 'inset-y', 'start', 'end', 'top', 'right', 'bottom', 'left'],\n            'inset-x': ['right', 'left'],\n            'inset-y': ['top', 'bottom'],\n            flex: ['basis', 'grow', 'shrink'],\n            gap: ['gap-x', 'gap-y'],\n            p: ['px', 'py', 'ps', 'pe', 'pt', 'pr', 'pb', 'pl'],\n            px: ['pr', 'pl'],\n            py: ['pt', 'pb'],\n            m: ['mx', 'my', 'ms', 'me', 'mt', 'mr', 'mb', 'ml'],\n            mx: ['mr', 'ml'],\n            my: ['mt', 'mb'],\n            'font-size': ['leading'],\n            'fvn-normal': [\n                'fvn-ordinal',\n                'fvn-slashed-zero',\n                'fvn-figure',\n                'fvn-spacing',\n                'fvn-fraction',\n            ],\n            'fvn-ordinal': ['fvn-normal'],\n            'fvn-slashed-zero': ['fvn-normal'],\n            'fvn-figure': ['fvn-normal'],\n            'fvn-spacing': ['fvn-normal'],\n            'fvn-fraction': ['fvn-normal'],\n            rounded: [\n                'rounded-s',\n                'rounded-e',\n                'rounded-t',\n                'rounded-r',\n                'rounded-b',\n                'rounded-l',\n                'rounded-ss',\n                'rounded-se',\n                'rounded-ee',\n                'rounded-es',\n                'rounded-tl',\n                'rounded-tr',\n                'rounded-br',\n                'rounded-bl',\n            ],\n            'rounded-s': ['rounded-ss', 'rounded-es'],\n            'rounded-e': ['rounded-se', 'rounded-ee'],\n            'rounded-t': ['rounded-tl', 'rounded-tr'],\n            'rounded-r': ['rounded-tr', 'rounded-br'],\n            'rounded-b': ['rounded-br', 'rounded-bl'],\n            'rounded-l': ['rounded-tl', 'rounded-bl'],\n            'border-spacing': ['border-spacing-x', 'border-spacing-y'],\n            'border-w': [\n                'border-w-s',\n                'border-w-e',\n                'border-w-t',\n                'border-w-r',\n                'border-w-b',\n                'border-w-l',\n            ],\n            'border-w-x': ['border-w-r', 'border-w-l'],\n            'border-w-y': ['border-w-t', 'border-w-b'],\n            'border-color': [\n                'border-color-t',\n                'border-color-r',\n                'border-color-b',\n                'border-color-l',\n            ],\n            'border-color-x': ['border-color-r', 'border-color-l'],\n            'border-color-y': ['border-color-t', 'border-color-b'],\n            'scroll-m': [\n                'scroll-mx',\n                'scroll-my',\n                'scroll-ms',\n                'scroll-me',\n                'scroll-mt',\n                'scroll-mr',\n                'scroll-mb',\n                'scroll-ml',\n            ],\n            'scroll-mx': ['scroll-mr', 'scroll-ml'],\n            'scroll-my': ['scroll-mt', 'scroll-mb'],\n            'scroll-p': [\n                'scroll-px',\n                'scroll-py',\n                'scroll-ps',\n                'scroll-pe',\n                'scroll-pt',\n                'scroll-pr',\n                'scroll-pb',\n                'scroll-pl',\n            ],\n            'scroll-px': ['scroll-pr', 'scroll-pl'],\n            'scroll-py': ['scroll-pt', 'scroll-pb'],\n        },\n        conflictingClassGroupModifiers: {\n            'font-size': ['leading'],\n        },\n    } as const satisfies Config\n}\n","import { createTailwindMerge } from './create-tailwind-merge'\nimport { getDefaultConfig } from './default-config'\n\nexport const twMerge = createTailwindMerge(getDefaultConfig)\n","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","import React, { ButtonHTMLAttributes } from \"react\";\n\nexport type ButtonProps = {\n\ttype?: \"button\" | \"submit\" | \"reset\";\n\tvariant: \"outlined\" | \"contained\" | \"text\" | \"neo\" | \"glass\" | \"circular\";\n\tcolor:\n\t\t| \"primary\"\n\t\t| \"secondary\"\n\t\t| \"success\"\n\t\t| \"warning\"\n\t\t| \"danger\"\n\t\t| \"info\"\n\t\t| \"light\"\n\t\t| \"dark\";\n\tsize: \"small\" | \"medium\" | \"large\";\n\tclassName?: string;\n\tstyle?: React.CSSProperties;\n\tasChild?: boolean;\n\tlabel: string;\n\tdisabled?: boolean;\n\tonClick?: () => void;\n} & ButtonHTMLAttributes<HTMLButtonElement>;\n\nexport const baseStyle =\n\t\"inline-flex items-center justify-center text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\";\n\nexport const variantStyle: { [key in ButtonProps[\"variant\"]]: string } = {\n\tcontained: \"rounded-md\",\n\toutlined: \"rounded-md border\",\n\ttext: \"underline-offset-4 hover:underline\",\n\tneo: \"rounded-md border-2 border-neo-dark\",\n\tglass: \"rounded-md\",\n\tcircular: \"rounded-full\",\n};\n\nexport const sizeStyle: { [key in ButtonProps[\"size\"]]: string } = {\n\tsmall: \"h-9 px-3\",\n\tmedium: \"h-10 px-4 py-2\",\n\tlarge: \"h-11 px-8\",\n};\n\nexport const colorMap: {\n\t[key in ButtonProps[\"variant\"]]: { [key in ButtonProps[\"color\"]]: string };\n} = {\n\tcontained: {\n\t\tprimary: \"bg-primary hover:bg-primary/90 text-primary-foreground\",\n\t\tsecondary: \"bg-secondary hover:bg-secondary/90 text-secondary-foreground\",\n\t\tsuccess: \"bg-success hover:bg-success/90 text-success-foreground\",\n\t\twarning: \"bg-warning hover:bg-warning/90 text-warning-foreground\",\n\t\tdanger: \"bg-danger hover:bg-danger/90 text-danger-foreground\",\n\t\tinfo: \"bg-info hover:bg-info/90 text-info-foreground\",\n\t\tlight: \"bg-light hover:bg-light/90 text-light-foreground\",\n\t\tdark: \"bg-dark hover:bg-dark/90 text-dark-foreground\",\n\t},\n\toutlined: {\n\t\tprimary:\n\t\t\t\"text-primary border-primary hover:bg-primary hover:text-primary-foreground\",\n\t\tsecondary:\n\t\t\t\"text-secondary border-secondary hover:bg-secondary hover:text-secondary-foreground\",\n\t\tsuccess:\n\t\t\t\"text-success border-success hover:bg-success hover:text-success-foreground\",\n\t\twarning:\n\t\t\t\"text-warning border-warning hover:bg-warning hover:text-warning-foreground\",\n\t\tdanger:\n\t\t\t\"text-danger border-danger hover:bg-danger hover:text-danger-foreground\",\n\t\tinfo: \"text-info border-info hover:bg-info hover:text-info-foreground\",\n\t\tlight: \"text-light border-light hover:bg-light hover:text-light-foreground\",\n\t\tdark: \"text-dark border-dark hover:bg-dark hover:text-dark-foreground\",\n\t},\n\ttext: {\n\t\tprimary: \"text-primary\",\n\t\tsecondary: \"text-secondary\",\n\t\tsuccess: \"text-success\",\n\t\twarning: \"text-warning\",\n\t\tdanger: \"text-danger\",\n\t\tinfo: \"text-info\",\n\t\tlight: \"text-light\",\n\t\tdark: \"text-dark\",\n\t},\n\tneo: {\n\t\tprimary: \"bg-neo-primary hover:bg-neo-primary/90 text-neo-primary-foreground\",\n\t\tsecondary: \"bg-neo-secondary hover:bg-neo-secondary/90 text-neo-secondary-foreground\",\n\t\tsuccess: \"bg-neo-success hover:bg-neo-success/90 text-neo-success-foreground\",\n\t\twarning: \"bg-neo-warning hover:bg-neo-warning/90 text-neo-warning-foreground\",\n\t\tdanger: \"bg-neo-danger hover:bg-neo-danger/90 text-neo-danger-foreground\",\n\t\tinfo: \"bg-neo-info hover:bg-neo-info/90 text-neo-info-foreground\",\n\t\tlight: \"bg-neo-light hover:bg-neo-light/90 text-neo-light-foreground\",\n\t\tdark: \"bg-neo-dark hover:bg-neo-dark/90 text-neo-dark-foreground\",\n\t},\n\tglass: {\n\t\tprimary: \"bg-primary/70 text-primary\",\n\t\tsecondary: \"bg-secondary/70 text-secondary\",\n\t\tsuccess: \"bg-success/70 text-success\",\n\t\twarning: \"bg-warning/70 text-warning\",\n\t\tdanger: \"bg-danger/70 text-danger\",\n\t\tinfo: \"bg-info/70 text-info\",\n\t\tlight: \"bg-light/70 text-light\",\n\t\tdark: \"bg-dark/70 text-dark\",\n\t},\n\tcircular: {\n\t\tprimary: \"bg-primary hover:bg-primary/90 text-primary-foreground\",\n\t\tsecondary: \"bg-secondary hover:bg-secondary/90 text-secondary-foreground\",\n\t\tsuccess: \"bg-success hover:bg-success/90 text-success-foreground\",\n\t\twarning: \"bg-warning hover:bg-warning/90 text-warning-foreground\",\n\t\tdanger: \"bg-danger hover:bg-danger/90 text-danger-foreground\",\n\t\tinfo: \"bg-info hover:bg-info/90 text-info-foreground\",\n\t\tlight: \"bg-light hover:bg-light/90 text-light-foreground\",\n\t\tdark: \"bg-dark hover:bg-dark/90 text-dark-foreground\",\n\t},\n};\n"]}